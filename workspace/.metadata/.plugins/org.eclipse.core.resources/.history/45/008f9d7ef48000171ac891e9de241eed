package com.cactus.insights.pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cactus.executor.Executioner;
import com.cactus.inits.Config;
import com.cactus.utils.Util;
import com.relevantcodes.extentreports.ExtentTest;

public class LoginPage {// extends AbstractPage
	private final WebDriver driver;
	private WebDriverWait wait;
	private Executioner executor;
	private ExtentTest test;
	private Util util;

	@FindBy(xpath = ".//*[@id='edit-name-1']")
	WebElement LoginEmailID;
	@FindBy(xpath = "//*[@id='edit-pass-1']")
	WebElement LoginPassowrd;
	@FindBy(xpath = "//*[@id='edit-submit-1']")
	WebElement LoginButton;

	By loader = By.xpath(".//*[@id='status' and @style='display: block;']");
	By byLoginError = By.xpath(".//*[@class='message error']");
	By skipForNow = By.id("skip-id");

	public LoginPage(WebDriver driver, ExtentTest test, WebDriverWait wait) {
		// super(driver, wait);
		this.driver = driver;
		this.wait = wait;
		this.test = test;
		executor = new Executioner(driver, test, wait);
		util = Util.getInstance();

		PageFactory.initElements(driver, this);
		executor.softWaitforVisibilityOfWebElement(LoginButton, "Wait until Check Login Button is displayed");
		executor.softWaitforCondition(ExpectedConditions.invisibilityOfElementLocated(getLoader()),
				"Invisibility of spinner");

		if (!driver.getTitle().trim().toLowerCase().contains(Config.SERVICE_PAGE_TITLE.toLowerCase())) {
			throw new IllegalStateException("This is not  the  Check Services  Page");
		}
	}

	public By getLoader() {
		return loader;
	}

	public DashboardPage loginToEditageDashboard(String userName, String password) {
		executor.type(LoginEmailID, userName, "Enter UserName");
		executor.type(LoginPassowrd, password, "Enter Password");
		executor.softWaitforElementToBeClickable(LoginButton, "Wait for Login to be clickable");
		executor.click(LoginButton, "Click on Login Button");

		executor.waitForPageLoadJS();
		if (executor.isElementPresent(byLoginError)) {
			String errorMsg = executor.getText(byLoginError);
			if (!errorMsg.equalsIgnoreCase("This email address is not registered with Editage.")) {
				String newPassword = userName.split("@")[0];
				executor.type(LoginEmailID, userName, "Enter UserName");
				executor.type(LoginPassowrd, newPassword, "Enter Password");
				executor.softWaitforElementToBeClickable(LoginButton, "Wait for Login to be clickable");
				executor.click(LoginButton, "Click on Login Button");
				CompleteYourProfilePage completeProfilePage = new ResetPasswordPage(driver, test, wait)
						.resetPassword("P@$$w0rd");
				completeProfilePage.clickOnSkip();
			}
		}

		if (executor.isElementPresent(skipForNow)) {
			executor.click(skipForNow, "Click on skip for now");
			executor.softWaitforInvisibilityOFWebElement(getLoader(), "Invisibility of Loader");
		}

		return new DashboardPage(driver, test, wait);
	}

}