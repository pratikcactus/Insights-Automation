package com.cactus.whiteboard.pages;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cactus.crm.pages.EnquiryAndJobViewPage;
import com.cactus.executor.Executioner;
import com.cactus.inits.AbstractPage;
import com.cactus.inits.Config;
import com.cactus.utils.Util;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;

public class AllocateJobPage extends AbstractPage {
	private Executioner executor;
	private ExtentTest test;
	private Util util;

	@FindBy(xpath = "//*[@id='headerRight']//a[contains(@href,'logout')]")
	WebElement logoutLink;

	@FindBy(xpath = "//div[@class='process']//img[@class='ganttAddUser']")
	List<WebElement> task;
	@FindBy(xpath = "//div[@class='process']//img[@class='ganttAddUser']/..//label")
	List<WebElement> task_name;

	@FindBy(xpath = "//div[@class='process']//div[@class='granttUserDiv']//input")
	List<WebElement> userDiv;

	@FindBy(xpath = ".//input[@id='submitAllocation']")
	WebElement allocationButton;

	By byThrobber = By.xpath(".//*[@class='throbber']");
	By byloading = By.xpath(".//*[contains(@class,'ac_loading')]");

	public AllocateJobPage(WebDriver driver, WebDriverWait wait, ExtentTest test) {
		super(driver, wait, test);
		this.test = test;
		this.executor = new Executioner(driver, test, wait);
		util = Util.getInstance();
		PageFactory.initElements(driver, this);
		executor.softWaitforCondition(ExpectedConditions.titleContains(Config.WHITEBOARD_PAGE_TITLE), "Wait for Title");
		executor.softWaitforVisibilityOfWebElement(logoutLink, "Wait until logout Element is displayed");
		executor.softWaitforCondition(ExpectedConditions.invisibilityOfElementLocated(getEditageLoader()),
				"Invisibility of spinner");
		executor.softWaitforCondition(ExpectedConditions.invisibilityOfElementLocated(byThrobber),
				"Invisibility of Throbber");
		if (!driver.getTitle().trim().toLowerCase().contains(Config.WHITEBOARD_PAGE_TITLE.toLowerCase())) {
			executor.addStatus(LogStatus.FAIL, "This is not  the  WhiteBoard Dashboard  Page");
			throw new IllegalStateException("This is not  the  WhiteBoard Dashboard  Page");
		}

	}

	public void assignResource(String resource) {
		String name = "";
		// String id = "";
		String[] str = resource.split(";");
		for (int i = 0; i < str.length; i++) {
			name = util.getResourceName(str[i]);
			// id = getResourceId(str[i]);
			

			executor.softWaitforElementToBeClickable(task.get(i), "task list to be clickable");
			executor.click(task.get(i), "Click on task");

			By byXpath = By.xpath("//*[@class='ac_even ac_over' and contains(text(),'" + name + "')]");
				
			executor.sendkeys(userDiv.get(i), name, "Send value :" + name);
			//executor.sendkeys(userDiv.get(i), "test", "Send value :" + name);
			
			executor.softWaitforInvisibilityOFWebElement(byloading, "Invisibility of loader");
			executor.pause(1);
			executor.sendkeys(userDiv.get(i), Keys.TAB, "Send Tab");
			if (executor.isElementPresent(byXpath)){
				WebElement el=driver.findElement(byXpath);
				executor.doubleClick(el, "Click on Options available");
			}
			executor.setAttributeValueJS(userDiv.get(i),name);
			System.out.println(userDiv.get(i).getAttribute("value"));
			
		}

		//System.out.println("Resource");

	}

	public EnquiryAndJobViewPage submitAllocateJob() {
		executor.click(allocationButton, "Click on submit Allocate Buttom");
		executor.softWaitforInvisibilityOFWebElement(allocationButton, "Invisibility of Submit Button");
		executor.softWaitforCondition(ExpectedConditions.urlContains(Config.CRM_PAGE_TITLE), "URL to be CRM");
		executor.waitForPageLoadJS();
		return new EnquiryAndJobViewPage(driver, wait, test);
	}

}
